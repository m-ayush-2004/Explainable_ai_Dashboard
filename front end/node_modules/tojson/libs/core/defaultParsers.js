// Generated by CoffeeScript 1.8.0
(function() {
  var defaultParsers, getItem, getType, initDefaultParsers, parserMgr, _arrayParser, _jsonArrParser;

  parserMgr = require("./parserMgr.js");

  getType = require('./convertType.js').getType;

  getItem = require('./convertType.js').getItem;

  initDefaultParsers = function() {
    var i, parserCfg;
    i = 0;
    while (i < defaultParsers.length) {
      parserCfg = defaultParsers[i];
      parserMgr.addParser(parserCfg.name, parserCfg.regExp, parserCfg.parserFunc);
      i++;
    }
  };

  _arrayParser = function(params) {
    var fieldName, type;
    type = getType(params.head);
    fieldName = params.head.replace(this.regExp, "");
    if (params.resultRow[fieldName] == null) {
      params.resultRow[fieldName] = [];
    }
    params.resultRow[fieldName].push(getItem(type, params.item));
  };

  _jsonArrParser = function(params) {
    var arrFieldName, fieldStr, headArr, headStr, pointer, type;
    type = getType(params.head);
    fieldStr = params.head.replace(this.regExp, "");
    headArr = fieldStr.split(".");
    pointer = params.resultRow;
    while (headArr.length > 1) {
      headStr = headArr.shift();
      if (pointer[headStr] == null) {
        pointer[headStr] = {};
      }
      pointer = pointer[headStr];
    }
    arrFieldName = headArr.shift();
    if (pointer[arrFieldName] == null) {
      pointer[arrFieldName] = [];
    }
    pointer[arrFieldName].push(getItem(type, params.item));
  };

  defaultParsers = [
    {
      name: "array",
      regExp: /^(#Number||#Boolean)?\*array\*/,
      parserFunc: _arrayParser
    }, {
      name: "json",
      regExp: /^(#Number||#Boolean)?\*json\*/,
      parserFunc: require("./parser_json.js")
    }, {
      name: "omit",
      regExp: /^\*omit\*/,
      parserFunc: function() {}
    }, {
      name: "jsonarray",
      regExp: /^(#Number||#Boolean)?\*jsonarray\*/,
      parserFunc: _jsonArrParser
    }
  ];

  initDefaultParsers();

}).call(this);
